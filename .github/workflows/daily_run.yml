name: Execucao Periodica de Atualizacao de Dados

on:
  # Mantém o gatilho manual para que você possa executar a qualquer momento.
  workflow_dispatch:

  schedule:
    # Agendamento para atualização em tempo real (a cada 2 horas).
    # Horários BRT: 02:00, 04:00, 06:00, 08:00, etc.
    - cron: '0 */2 * * *'

    # Agendamento para a atualização D-1 (uma vez ao dia).
    # Horário BRT: 02:00 (05:00 UTC).
    - cron: '0 5 * * *'

jobs:
  run-realtime-update:
    # Condição: Executa SOMENTE no agendamento de 2 em 2 horas OU em um acionamento manual.
    if: github.event.schedule == '0 */2 * * *' || github.event_name == 'workflow_dispatch'
    
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout do Repositório
        uses: actions/checkout@v3

      - name: 2. Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 3. Instalar Dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 4. Executar o Script de Atualização em Tempo Real (Hoje)
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          MELI_CLIENTS_CSV: ${{ secrets.MELI_CLIENTS_CSV }}
        # Executa o script sem argumentos para pegar os dados do dia atual.
        run: python daily_collector.py

  run-daily-d-minus-1-update:
    # Condição: Executa SOMENTE no agendamento diário (05:00 UTC) OU em um acionamento manual.
    if: github.event.schedule == '0 5 * * *' || github.event_name == 'workflow_dispatch'

    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout do Repositório
        uses: actions/checkout@v3

      - name: 2. Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 3. Instalar Dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 4. Executar o Script de Atualização D-1 (Ontem)
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          MELI_CLIENTS_CSV: ${{ secrets.MELI_CLIENTS_CSV }}
        # Executa o script com o argumento para pegar os dados do dia anterior.
        run: python daily_collector.py --dia-anterior
